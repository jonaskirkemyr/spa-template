/*! spa v1.0.0 2016-02-15 */
var Spa;!function(a){var b=function(){function b(){}return b.prototype.init=function(){a.RouteMapper.init()},b.generateHtml=function(a,c){var d=b.namespace[c];if(void 0!==d){var e=b.namespace[c](a),f=document.getElementById(b.container);if(null===f)throw"Couldn't find element. Is DOM ready?";document.getElementById(b.container).innerHTML=e}else b.renderErrorPage()},b.renderErrorPage=function(){b.generateHtml(null,"404")},b.namespace=null,b.container=null,b}();a.App=b}(Spa||(Spa={}));var Spa;!function(a){var b=function(){function b(a){this.route=a,this.title=null}return b.prototype.setRouteTitle=function(a){this.title=a},b.prototype.getRouteTitle=function(){return this.title},b.prototype.getRoute=function(){return this.route},b.prototype.addRoute=function(b,c){a.RouteMapper.addRoute(this.route+b,c)},b.prototype.render=function(b){a.App.generateHtml(null,"pages/"+b)},b}();a.Route=b}(Spa||(Spa={}));var Spa;!function(a){var b=function(){function a(){}return a.init=function(){hasher.changed.add(a.hashChange),hasher.initialized.add(a.hashChange),hasher.init()},a.setHashSilently=function(b){hasher.changed.active=!1,a.setHash(b),hasher.changed.active=!0},a.setHash=function(a){hasher.setHash(a)},a.isHash=function(a){return a===hasher.getHash()},a.addRoute=function(a,b){crossroads.addRoute(a,b)},a.hashChange=function(a,b){crossroads.parse(a)},a}();a.RouteMapper=b}(Spa||(Spa={}));